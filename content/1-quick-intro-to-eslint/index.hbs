---
title: A quick introduction to ESLint
author: Florian Pichler
style: |
  section:first-child {
    background-image: url(eslint-logo.svg);
    background-repeat: no-repeat;
    background-position: center;
  }
---
{{> top}}

{{#slides}}

==== #intro .title


<h1>{{#typo}}{{file.data.title}}{{/typo}}</h1>
<p><em>By {{file.data.author}}</em></p>

<footer><a href="index.html">More talks by @pichfl</a></footer>


==== #what


## What's linter?

> generically, lint or a linter is any tool that flags suspicious usage in software written in any computer language. â€“ via [Wikipedia](https://en.wikipedia.org/wiki/Lint_(software)


==== #why


## Why you should use one

- static analysis helps identify syntax and other code errors without code execution
- the same process can be used to validate code style rules


==== #previously


## Other tools beside ESLint

- [JSLint][1]: The grandfather of JavaScript code quality tools, written by Douglas Crockford.
- [JSHint][2]: JSHint is a community-driven tool to detect errors and potential problems in JavaScript code and to enforce your team's coding conventions.
- [JSCS][3]: JSCS is a code style linter/formatter for programmatically enforcing your style guide.

JSLint is too inflexible. Until ESLint became available may projects used a combination of JSHint and JSCS to provide a good coverage for style and errors.

[1]: http://jslint.com
[2]: http://jshint.com
[3]: http://jscs.info


==== #why-eslint


## Why ESLint

- Plugin based architecture (Browserify, Webpack, Gulp, and many more show this works rather well)
- Uses an AST which allows more complex rules
- Provides a vast amount of rules for possible errors, best practices, variable handling, node.js, stylistic issues, and very good support for **ES2015** & **ES2016**!
- Very easy configuration which even allows for inheritance which helps in large projects
- High test coverage


==== #setup


## Installation

```bash
# Command Line Interface
npm i -g eslint
```

## Usage

```bash
# The CLI Supports globbing
eslint **/*.js
```


Plugins for Grunt, Gulp, Webpack and many others exist as well. <br>
The generator for this slideshow actually uses **gulp-eslint**.


==== #configuration


## Configuration

- Inline with comments
- .eslintrc with support for JSON and YAML
- eslintConfig filed in package.json

Configuration can be **inherited** (either from a preset or a different folder)


==== #thanks .title

# Thank You

{{/slides}}

{{> end}}