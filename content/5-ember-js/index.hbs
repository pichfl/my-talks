---
title: An ambitious introduction to Ember.js
author: Florian Pichler
style: |
  section:first-child {
	background-image: url(emberjs.svg);
	background-repeat: no-repeat;
	background-position: center;
  }
  h1 {
	margin-bottom: 2.5em;
  }
---
{{> top}}

{{#slides}}

==== #intro .title


<h1>An ambitious introduction to <span class="aux">Ember.js</span></h1>
<p><em>By {{author}}</em></p>

<footer><a href="../">More talks by @pichfl</a></footer>


==== #history

## History

- Ember.js is a fork of SproutCore, infamous for powering Apples MobileMe platform
- Created by Yehuda Katz (core team member of jQuery, Ruby on Rails, …) and many others
- MVC-ish framework for single-page web applications



==== #ambitious

## A framework for creating ambitious web applications

- Open-source and driven by RFCs
- Strong usage of [Semantic Versioning](http://semver.org)
- Convention over Configuration
- Highly opiononated but flexible
- Not owned by a single company, but supported by many sponsors: Yahoo, LinkedIn, Bustle
- Used by: Discourse, Groupon, Vine, Nordstrom, Twitch.tv, Apple Music, Sony PSN, …



==== #features

## Features

- ES2015 modules by default
- includes routing, controllers, components, services, helpers, templating, models, a data layer …
- comes with Ember-CLI
- Ember Inspector
- 6 week release cycle, with proper betas, a canary channel
- LTS support



==== #basics

## Basic concepts

- Routes
- Models
- Services
- Templates
- Components
- (Controllers)

### OOP

- Class system with Mixins, Extending, Reopening
- All parts of Ember extend Ember.Object, which enables support for getters and setters, data-binding - even on legacy systems


==== #routing-router

## Routing - The router

- application state is represented by an URL
- rock solid - inspiration for projects like ui-router (Angular.js)
- dynamic segments, query params and nested routes
- intelligent defaults and autogenerated routes


```js
Router.map(function() {
	this.route('entries', function() {
		// this.route('index', {path: '/'}); //autogenerated
		this.route('new'); // entries/new
		this.route(':entry'); // entries/1
	});
});
```

==== #routing-routes

## Routing - Routes

- promise aware for asynchronous routing, error and loading states
- retrieve model data (manually or from a store)
- setup and render a template (a component)

```js
export default Ember.Route.extend({
	model() {
		return this.store.findAll('entry'); // using ember-data
		// return jQuery.ajax(…); // works as well
	},

	afterModel(model) {
		if (!model) {
			this.redirect('entries.new');
		}
	},
});
```


==== #thanks .title


# Danke


{{/slides}}

{{> end}}